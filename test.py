import latpy

C = latpy.svp_challenge(70, 0)
print(C)
"""
print(C.compute_gso())
print(C.volume())
print(C.sl())
print(C.pot())
print(C.hf())
print(C.rhf())
print(C.gh())
print(C.od())
print("size reduced:")
print(C.size(0.5))
print(C.size(0.5).is_size())
print("LLL reduced:")
print(C.lll())
print(C.lll()[0].is_lll(0.99))
print("deepLLL reduced:")
print(C.deep_lll())
print(C.deep_lll(gamma=50)[0].is_deep_lll(0.99))
print("L2 reduced:")
print(C.l2())
print(C.l2()[0].is_lll(0.99))
# print(C.lll()[0].enum_sv(pruning=True))
print("QRLLL reduced:")
print(C.qr_lll())
print(C.qr_lll()[0].is_lll(0.99))
print("QRDeepLLL reduced:")
print(C.qr_deep_lll(gamma=50))
print(C.qr_deep_lll(gamma=50)[0].is_deep_lll(0.99))
print("DeepL2 reduced:")
print(C.deep_l2(gamma=50))
print(C.deep_l2(gamma=50)[0].is_deep_lll(0.99))
print("PotLLL reduced:")
print(C.pot_lll())
print(C.pot_lll()[0].is_lll(0.99))
"""

print("BKZ reduced:")
C = C.deep_lll(gamma=70)[0]
print("DeepLLL finished")
D = C.deep_l2(gamma=70)[0]
print("DeepL2 finished")
D = D.bkz(beta=50, pruning=True)[0]
print(D)
print(D.bkz(beta=65, pruning=True))
# print(C.bkz(beta=20, pruning=True)[0].sl())
# print("DeepBKZ reduced:")
# print(C.deep_bkz(beta=20, pruning=True, gamma=50))
# print(C.deep_bkz(beta=20, pruning=True, gamma=50)[0].sl())
# print("PotBKZ reduced:")
# print(C.pot_bkz(beta=20))
# print("Done")
